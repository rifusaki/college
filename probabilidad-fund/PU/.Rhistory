x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
x = c(round(rnorm(50,mean = xbarra, sd = sdev),20))
z.test(x,y = NULL,alternative = "two.sided", mu = xbarra, sigma.x = sigma_mu,
sigma.y = NULL,conf.level=0.95)
valor_c <- qnorm(c(alfa/2),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (prom - mu0)/((sdev)/sqrt(n));z
# 1 - Lentes
n <- 50
prom <- 4.15
sdev <- 0.58
alfa <- 0.05
mu0 <- 4.25
valor_c <- qnorm(c(alfa/2),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (prom - mu0)/((sdev)/sqrt(n));z
?qnorm
valor_c <- qnorm(c(alfa/2),mean = 0, sd = 1, lower.tail = F);valor_c
valor_c <- qnorm(c(0.005),mean = 0, sd = 1, lower.tail = F);valor_c
alfa <- 0.01
valor_c <- qnorm(c(alfa/5),mean = 0, sd = 1, lower.tail = F);valor_c
valor_c <- qnorm(c(alfa/2),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (4.15 - 4.25)/((0.58)/sqrt(50));z
z <- (prom - mu0)/((sdev)/sqrt(n));z
z <- (prom - mu0)/((sdev)/sqrt(n));z
# 2 - Alambre
n = 25
prom = 2155
sdev = 45
alfa = 0.05
mu0 = 2150
valor_c <- qnorm(c(alfa/2),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (prom - mu0)/((sdev)/sqrt(n));z
ifelse(z > valor_c|z < -valor_c,"Rechace H0", "No rechace H0")
valor_c <- qnorm(c(alfa),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (prom - mu0)/((sdev)/sqrt(n));z
ifelse(z > valor_c|z < -valor_c,"Rechace H0", "No rechace H0")
?t.test
z <- (prom - mu0)/((sdev)/sqrt(n));z
# 1 - Lentes
n <- 50
prom <- 4.15
sdev <- 0.58
alfa <- 0.05
mu0 <- 4.25
z <- (prom - mu0)/((sdev)/sqrt(n));z
valor_c <- qnorm(c(alfa/2),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (prom - mu0)/((sdev)/sqrt(n));z
z <- (prom - mu0)/((sdev)/sqrt(n));z
valor_c <- qnorm(c(0.025),mean = 0,sd = 1, lower.tail = T)
z <- (prom - mu0)/((sdev)/sqrt(n));z
valor_c
valor_c <- qnorm(c(alfa/2),mean = 0, sd = 1, lower.tail = F);valor_c
valor_c <- qnorm(c(0.05),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (prom - mu0)/((sdev)/sqrt(n));z
# 3 - Llamas
x = c(9.90, 9.93, 9.85, 9.87, 9.97, 9.87, 9.77, 9.94, 9.85, 9.75, 9.95, 9.92,
9.84, 9.99, 9.98, 9.95, 9.95, 9.94, 9.92, 9.79)
n = lenght(x)
prom = mean(x)
n = length(x)
prom = mean(x)
mu0 = 9.75
valor_c <- qnorm(c(0.05),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (prom - mu0)/((sdev)/sqrt(n));z
prom
sdev = sd(x)
sdev
mu0 = 9.75
valor_c <- qnorm(c(0.05),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (prom - mu0)/((sdev)/sqrt(n));z
ifelse(z > valor_c|z < -valor_c,"Rechace H0", "No rechace H0")
# 4 - Mecánico (8.11)
p0 = 0.75
n = 82
x = 52
pg = x/n
alfa = 0.1
z = round((pg-p0)/sqrt(p0*(1-p0)/n),3)
z = round((pg-p0)/sqrt(p0*(1-p0)/n),3);z
pnorm(c(0.69),lower.tail = F)
??prop.test
?prop.test
z = round((pg-p0)/sqrt(p0*(1-p0)/n),3);z
valor_c = round(qnorm(c(0.01),mean = 0, sd = 1, lower.tail =F),3)
ifelse(z > valor_c,"Rechazar H0", "No rechazar H0")
valor_c = round(qnorm(c(0.1),mean = 0, sd = 1, lower.tail =F),3)
ifelse(z > valor_c,"Rechazar H0", "No rechazar H0")
valor_c = round(qnorm(c(0.00001),mean = 0, sd = 1, lower.tail =F),3)
ifelse(z > valor_c,"Rechazar H0", "No rechazar H0")
valor_c = round(qnorm(c(0.000000001),mean = 0, sd = 1, lower.tail =F),3)
ifelse(z > valor_c,"Rechazar H0", "No rechazar H0")
valor_c = round(qnorm(c(0.1),mean = 0, sd = 1, lower.tail =F),3); valor_c
z = round((pg-p0)/sqrt(p0*(1-p0)/n),3);z
n = 72
x = 52
pg = x/n
alfa = 0.1
z = round((pg-p0)/sqrt(p0*(1-p0)/n),3);z
valor_c = round(qnorm(c(0.1),mean = 0, sd = 1, lower.tail =F),3); valor_c
ifelse(z > valor_c,"Rechazar H0", "No rechazar H0")
n = 82
x = 52
pg = x/n
alfa = 0.1
z = round((pg-p0)/sqrt(p0*(1-p0)/n),3);z
valor_p = round(2*pnorm(z,lower.tail = F),4)
valor_p = round(2*pnorm(z,lower.tail = F),4); valor_p
valor_p = round(pnorm(z,lower.tail = F),4); valor_p
valor_c = round(qnorm(c(0.1),mean = 0, sd = 1, lower.tail =F),3); valor_c
valor_p = round(pnorm(z,lower.tail = F),4); valor_p
valor_c = round(qnorm(c(0.1),mean = 0, sd = 1, lower.tail = F),4); valor_c
valor_p = round(pnorm(z,lower.tail = F),4); valor_p
?pnorm
# 4 - Mecánico (8.11) TODO
p0 = 0.75
n = 82
x = 52
pg = x/n
alfa = 0.1
z = round((pg-p0)/sqrt(p0*(1-p0)/n),3);z
valor_c = round(qnorm(c(0.1),mean = 0, sd = 1, lower.tail = F),4); valor_c
valor_p = round(pnorm(z,lower.tail = F),4); valor_p
# 1 - Lentes - REVISAR TODO (??)
n <- 50
prom <- 4.15
sdev <- 0.58
alfa <- 0.05
mu0 <- 4.25
valor_c <- qnorm(c(alfa/2),mean = 0, sd = 1, lower.tail = F);valor_c
valor_p = round(pnorm(z,lower.tail = F),4); valor_p
# 5 - Licuefacción
x = c(111.1, 111.1, 109.6, 98.1, 99.5, 99.78, 105.3, 108.9, 110.1, 107.1, 110.0,
98.4, 105.1, 104.5, 105.7, 103.3, 100.3, 102.6, 101.7, 105.4, 99.6, 103.3,
102.1, 104.3)
y = c(108.1, 106.0, 99.0, 97.9, 103.3, 108.6, 104.1, 98.2, 99.9, 105.2, 97.9)
n = length(x)
m = length(y)
xprom = mean(x)
yprom = mean(y)
xsdev = sd(x)
ysdev = sd(y)
prueba = zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
mu = 0, conf.level = 0.99)$conf.int;prueba
prueba = zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
mu = 0, conf.level = 0.95)$conf.int;prueba
z.critico = qnorm(c(0.005),lower.tail = F)
ifelse(zp < -z.critico | zp > z.critico,"Rechace Ho", " No rechace H0")
zp = round(((xprom-yprom)-k)/sqrt((xsdev^2/m)+(sdev^2/n)),2); zp
k = 0
zp = round(((xprom-yprom)-k)/sqrt((xsdev^2/m)+(sdev^2/n)),2); zp
z.critico = qnorm(c(0.005),lower.tail = F)
ifelse(zp < -z.critico | zp > z.critico,"Rechace Ho", " No rechace H0")
k = ???
n = length(x)
ICI_difmed = (xbarra - ybarra)- z.critico*sqrt((xsdev^2/n)+(sdev^2/m))
ICS_difmed = (xbarra - ybarra)+ z.critico*sqrt((xsdev^2/n)+(sdev^2/m))
ICI_difmed = (xprom - yprom)- z.critico*sqrt((xsdev^2/n)+(sdev^2/m))
ICS_difmed = (xprom - yprom)+ z.critico*sqrt((xsdev^2/n)+(sdev^2/m))
ICI_difmed = (xprom - yprom)- z.critico*sqrt((xsdev^2/n)+(sdev^2/m));ICI_difmed
ICS_difmed = (xprom - yprom)+ z.critico*sqrt((xsdev^2/n)+(sdev^2/m));ICS_difmed
prueba = zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
mu = 0, conf.level = 0.95)$conf.int;prueba
d = x-y;d
# 6 - Carga de ruptura
x = c(37.4, 58.1, 51.5, 48.7, 53.2, 49.9, 35.9, 49.8)
y = c(38.5, 30.4, 46.5, 44.5, 26.5, 32.5, 36.5, 46.5)
mu0 = 0
alfa = 0.05
d = x-y;d
prueba.t =tsum.test(mean.x = mean(x),s.x = sd(x),n.x = length(x),mean.y = mean(y),
s.y = sd(y),n.y = length(y),conf.level = 0.95)
round(prueba.t$conf.int,2)
prueba.t = t.test(x = x,y = y, alternative ="less", var.equal= F,conf.level = 0.95 )
prueba.t$p.value
prueba.t$conf.int
prueba.t = t.test(x = x,y = y, alternative ="less", var.equal= F,conf.level = 0.95 )
prueba.t$p.value
prueba.t$conf.int
prueba.t$conf.level
prueba.t = t.test(x = x,y = y, alternative ="less", var.equal= F, conf.level = 0.95 )
prueba.t$p.value
prueba.t$conf.int
prueba.t$conf.level
prueba.t = t.test(x = x,y = y, alternative ="less", var.equal= F, conf.level = 0.95 )
prueba.t =tsum.test(mean.x = mean(x),s.x = sd(x),n.x = length(x),mean.y = mean(y),
s.y = sd(y),n.y = length(y),alternative = "less",var.equal = F,
conf.level = 0.95)
prueba.t$p.value
prueba.t$conf.int
prueba.t = t.test(x = x,y = y, alternative ="less", var.equal= F, conf.level = 0.95 )
prueba.t$p.value
prueba.t$conf.int
prueba.t =tsum.test(mean.x = mean(x),s.x = sd(x),n.x = length(x),mean.y = mean(y),
s.y = sd(y),n.y = length(y),alternative = "less",var.equal = F,
conf.level = 0.95)
prueba.t$p.value
prueba.t$conf.level
prueba.t = t.test(x = x,y = y, alternative ="more", var.equal= F, conf.level = 0.95 )
prueba.t$p.value
prueba.t = t.test(x = x,y = y, alternative ="greater", var.equal= F, conf.level = 0.95 )
prueba.t$p.value
prueba.t$conf.int
prueba.t =tsum.test(mean.x = mean(x),s.x = sd(x),n.x = length(x),mean.y = mean(y),
s.y = sd(y),n.y = length(y),alternative = "greater",var.equal = F,
conf.level = 0.95)
prueba.t$p.value
prueba.t$conf.level
prueba.t$t.value
prueba.t$conf.int
ej9.9 = t.test(x=x,y=y,alternative = "two.sided", mu = 0,
paired = TRUE, conf.level = 0.95)
ej9.9$p.value
# 6 - Carga de ruptura
x = c(37.4, 58.1, 51.5, 48.7, 53.2, 49.9, 35.9, 49.8)
y = c(38.5, 30.4, 46.5, 44.5, 26.5, 32.5, 36.5, 46.5)
mu0 = 0
alfa = 0.05
ej9.9 = t.test(x=x,y=y,alternative = "greater", mu = mu0,
paired = TRUE, conf.level = 0.95)
ej9.9$p.value
pair = t.test(x=x,y=y,alternative = "greater", mu = mu0,
paired = TRUE, conf.level = 0.95);pair
ifelse(pair$p.value<0.01,"Rechace Ho","Analizar")
round(pair$conf.int,2)
round(pair$conf.int,2)
pair = t.test(x=x,y=y,alternative = "greater",
paired = TRUE, conf.level = 0.95);pair
pair = t.test(x=x,y=y,alternative = "greater", mu = mu0,
paired = TRUE, conf.level = 0.99);pair
pair = t.test(x=x,y=y,alternative = "greater", mu = mu0,
paired = TRUE, conf.level = 0.95);pair
pair = t.test(x=x,y=y,alternative = "greater", mu = mu0,
paired = TRUE, conf.level = 0.05);pair
pair = t.test(x=x,y=y,alternative = "greater", mu = mu0,
paired = TRUE, conf.level = 0.95);pair
# 6 - Carga de ruptura TODO
x = c(37.4, 58.1, 51.5, 48.7, 53.2, 49.9, 35.9, 49.8)
y = c(38.5, 30.4, 46.5, 44.5, 26.5, 32.5, 36.5, 46.5)
mu0 = 0
alfa = 0.05
pair = t.test(x=x,y=y,alternative = "greater", mu = mu0,
paired = TRUE, conf.level = 0.95);pair
prueba = zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
mu = 0, conf.level = 0.95)$conf.int;prueba
prueba = zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
mu = 0, conf.level = 0.95);prueba
?zsum.test
prueba = ?zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
conf.level = 0.95);prueba
prueba = ?zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
conf.level = 0.95);prueba
prueba = zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
conf.level = 0.95);prueba
prueba = zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
conf.level = 0.99);prueba
prueba = zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
conf.level = 0.999999);prueba
prueba = zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
conf.level = 0.9);prueba
prueba = zsum.test(mean.x = xprom, sigma.x = xsdev, n.x = n,
mean.y = yprom, sigma.y = ysdev, n.y = m,
conf.level = 0.95);prueba
z.critico = qnorm(c(0.05),lower.tail = F)
ICI_difmed = (xprom - yprom)- z.critico*sqrt((xsdev^2/n)+(sdev^2/m));ICI_difmed
ICS_difmed = (xprom - yprom)+ z.critico*sqrt((xsdev^2/n)+(sdev^2/m));ICS_difmed
# 7 - Velocidad
nx = 250
fx = 67
pgx = fx/nx
ny = 200
fy = 85
pgy = fy/ny
alfa = 0.05
pg = (x+y)/(m+n);pg
pg = (x+y)/(nx+ny);pg
# 7 - Velocidad
nx = 250
fx = 67
pgx = fx/nx
ny = 200
fy = 85
pgy = fy/ny
alfa = 0.05
pg = (x+y)/(nx+ny);pg
pg = (fx+fy)/(nx+ny);pg
z = (pgx-pgy)/sqrt(pg*(1-pg)*(1/ny+1/nx));z
prueba.t = t.test(x = x,y = y, alternative ="two.sided",
var.equal= F,conf.level = 0.95 );prueba.t
# 5 - Licuefacción - 9.1 TODO
x = c(111.1, 111.1, 109.6, 98.1, 99.5, 99.78, 105.3, 108.9, 110.1, 107.1, 110.0,
98.4, 105.1, 104.5, 105.7, 103.3, 100.3, 102.6, 101.7, 105.4, 99.6, 103.3,
102.1, 104.3)
y = c(108.1, 106.0, 99.0, 97.9, 103.3, 108.6, 104.1, 98.2, 99.9, 105.2, 97.9)
prueba.t = t.test(x = x,y = y, alternative ="two.sided",
var.equal= F,conf.level = 0.95 );prueba.t
prueba.t = t.test(x = x, alternative ="two.sided",
var.equal= F,conf.level = 0.95 );prueba.t
prueba.t = t.test(x = x, alternative ="two.sided",
var.equal= F,conf.level = 0.9);prueba.t
# 2 - Alambre - REVISAR HIPÓTESIS (8.6-1)
n = 25
prom = 2155
sdev = 45
alfa = 0.05
mu0 = 2150
valor_c <- qnorm(c(alfa),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (prom - mu0)/((sdev)/sqrt(n));z
ifelse(z > valor_c,"Rechace H0", "No rechace H0")
valor_c <- qnorm(c(alfa/2),mean = 0, sd = 1, lower.tail = F);valor_c
valor_p = round(pnorm(z,lower.tail = F),4); valor_p
# 3 - Llamas - REVISAR HIPÓTESIS (8.6-2)
x = c(9.90, 9.93, 9.85, 9.87, 9.97, 9.87, 9.77, 9.94, 9.85, 9.75, 9.95, 9.92,
9.84, 9.99, 9.98, 9.95, 9.95, 9.94, 9.92, 9.79)
n = length(x)
prom = mean(x)
sdev = sd(x)
mu0 = 9.75
valor_c <- qnorm(c(0.05),mean = 0, sd = 1, lower.tail = F);valor_c
z <- (prom - mu0)/((sdev)/sqrt(n));z
ifelse(z > valor_c|z < -valor_c,"Rechace H0", "No rechace H0")
n = 50
x_barra_muestral = 4.15
sigma_mu= 0.58
alpha = 0.05
mu_0 = 4.25
#planteamos la hipotesis#
#HO = 4.25
#H1 dif 4.25
#formula
# z = (xbarra -mu_0)/(sigma_mu / raiz(n))
#Valor critico
valor_c <- qnorm(c(0.025),mean = 0, sd = 1, lower.tail = T)
valor_c
z = (x_barra_muestral - mu_0)/((sigma_mu)/sqrt(n));z
ifelse(z < -valor_c|z > valor_c  ,"Rechace H0", "no rechce H0")
# 1 - Lentes - RESPUESTA PARCIAL . -3.12
# https://quizizz.com/admin/quiz/5c4b26d8a7acbc001a5a6ffa/prueba-de-hipotesis-uninter
n <- 50
prom <- 4.15
sdev <- 0.58
alfa <- 0.05
mu0 <- 4.25
valor_c <- qnorm(c(alfa/2),mean = 0, sd = 1, lower.tail = F);valor_c
valor_p = round(pnorm(z,lower.tail = F),4); valor_p
z <- (prom - mu0)/((sdev)/sqrt(n));z
# 4 - Mecánico (8.11) RESPUESTA PARCIAL
p0 = 0.75
n = 82
x = 52
pg = x/n
alfa = 0.1
z = round((pg-p0)/sqrt(p0*(1-p0)/n),3);z
valor_c = round(qnorm(c(0.1),mean = 0, sd = 1, lower.tail = F),4); valor_c
valor_p = round(pnorm(z,lower.tail = F),4); valor_p
# 5 - Licuefacción - 9.1 COMPLETO
x = c(111.1, 111.1, 109.6, 98.1, 99.5, 99.78, 105.3, 108.9, 110.1, 107.1, 110.0,
98.4, 105.1, 104.5, 105.7, 103.3, 100.3, 102.6, 101.7, 105.4, 99.6, 103.3,
102.1, 104.3)
y = c(108.1, 106.0, 99.0, 97.9, 103.3, 108.6, 104.1, 98.2, 99.9, 105.2, 97.9)
k = ???
n = length(x)
m = length(y)
xprom = mean(x)
yprom = mean(y)
xsdev = sd(x)
ysdev = sd(y)
prueba.t = t.test(x = x,y = y, alternative ="two.sided",
var.equal= F,conf.level = 0.95 );prueba.t
# 6 - Carga de ruptura - ANALIZAR
x = c(37.4, 58.1, 51.5, 48.7, 53.2, 49.9, 35.9, 49.8)
y = c(38.5, 30.4, 46.5, 44.5, 26.5, 32.5, 36.5, 46.5)
mu0 = 0
alfa = 0.05
pair = t.test(x=x,y=y,alternative = "greater", mu = mu0,
paired = TRUE, conf.level = 0.95);pair
ifelse(pair$p.value<0.01,"Rechace Ho","Analizar")
ifelse(pair$p.value>0.01,"Rechace Ho","Analizar")
round(pair$conf.int,2)
round(pair$conf.int,2)
# 7 - Velocidad - ANALIZAR
nx = 250
fx = 67
pgx = fx/nx
ny = 200
fy = 85
pgy = fy/ny
alfa = 0.05
pg = (fx+fy)/(nx+ny);pg # atenta
z = (pgx-pgy)/sqrt(pg*(1-pg)*(1/ny+1/nx));z
z.critico = qnorm(c(0.05),lower.tail = T);z.critico
ifelse(z<z.critico, "Rechace H0", "No rechace H0")
# 6 - Carga de ruptura - ANALIZAR
x = c(37.4, 58.1, 51.5, 48.7, 53.2, 49.9, 35.9, 49.8)
y = c(38.5, 30.4, 46.5, 44.5, 26.5, 32.5, 36.5, 46.5)
mu0 = 0
alfa = 0.05
pair = t.test(x=x,y=y,alternative = "greater", mu = mu0,
paired = TRUE, conf.level = 0.95);pair
ifelse(pair$p.value>0.01,"Rechace Ho","Analizar")
f = s1^2/s2^2;f
# 9 - Cobre
s1 = 21.5
m = 38
s2 = 19.45
n = 35
f = s1^2/s2^2;f
f.critico = qf(c(0.1),df1 = m-1,df2 = n-1,lower.tail = T)
ifelse(f < f.critico,"Rechace H0","No rechacde H0")
x
x
x
# 5 - Licuefacción - 9.1 COMPLETO
x = c(111.1, 111.1, 109.6, 98.1, 99.5, 99.78, 105.3, 108.9, 110.1, 107.1, 110.0,
98.4, 105.1, 104.5, 105.7, 103.3, 100.3, 102.6, 101.7, 105.4, 99.6, 103.3,
102.1, 104.3)
y = c(108.1, 106.0, 99.0, 97.9, 103.3, 108.6, 104.1, 98.2, 99.9, 105.2, 97.9)
k = ???
n = length(x)
m = length(y)
xprom = mean(x)
yprom = mean(y)
xsdev = sd(x)
ysdev = sd(y)
prueba.t = t.test(x = x,y = y, alternative ="two.sided",
var.equal= F,conf.level = 0.95 );prueba.t
